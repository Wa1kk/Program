program Calculator;

type
  TNumber = class
  private
    value: Double;
  public
    constructor Create(a: Double);
    function GetValue: Double;
    procedure SetValue(a: Double);
  end;

constructor TNumber.Create(a: Double);
begin
  value := a;
end;

function TNumber.GetValue: Double;
begin
  Result := value;
end;

procedure TNumber.SetValue(a: Double);
begin
  value := a;
end;

type
  TCalculator = class
  private
    num1, num2, result: TNumber;
  public
    constructor Create(a, b: TNumber);
    function Add: TNumber;
    function Subtract: TNumber;
    function Multiply: TNumber;
    function Divide: TNumber;
  end;

constructor TCalculator.Create(a, b: TNumber);
begin
  num1 := a;
  num2 := b;
  result := TNumber.Create(0);
end;

function TCalculator.Add: TNumber;
begin
  result.SetValue(num1.GetValue + num2.GetValue);
  Result := result;
end;

function TCalculator.Subtract: TNumber;
begin
  result.SetValue(num1.GetValue - num2.GetValue);
  Result := result;
end;

function TCalculator.Multiply: TNumber;
begin
  result.SetValue(num1.GetValue * num2.GetValue);
  Result := result;
end;

function TCalculator.Divide: TNumber;
begin
  if num2.GetValue <> 0 then
    result.SetValue(num1.GetValue / num2.GetValue)
  else
    result.SetValue(0);
  Result := result;
end;

var
  num1, num2, result: TNumber;
  a, b: Double;
  calculator: TCalculator;

begin
  Write('Введите первое число: ');
  ReadLn(a);
  num1 := TNumber.Create(a);

  Write('Введите второе число: ');
  ReadLn(b);
  num2 := TNumber.Create(b);

  calculator := TCalculator.Create(num1, num2);

  result := calculator.Add;
  WriteLn('Сложение: ', result.GetValue:0:2);

  result := calculator.Subtract;
  WriteLn('Вычитание: ', result.GetValue:0:2);

  result := calculator.Multiply;
  WriteLn('Умножение: ', result.GetValue:0:2);

  result := calculator.Divide;
  WriteLn('Деление: ', result.GetValue:0:2);

  ReadLn;
end.
